{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","console","log","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.399ec351.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignedInLinks =(props) =>{\n    console.log(props)\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating red lighten-1\">\n                {props.profile.initials} \n            </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps =(dispatch)=>{\n    return{\n        signOut:()=>dispatch(signOut())\n    }\n}\nexport default connect(null,mapDispatchToProps) (SignedInLinks)","export const signIn =(credentials) =>{\n    return(dispatch,getState,{getFirebase}) =>{\n        const firebase =getFirebase()\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type:'LOGIN_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({type:'LOGIN_ERROR',err})\n        })\n    }\n}\n\nexport const signOut =()=>{\n    return(dispatch,getState,{getFirebase}) =>{\n        const firebase=getFirebase()\n        firebase.auth().signOut().then(()=>{\n            dispatch({type:'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp =(newUser) =>{\n    return(dispatch,getState,{getFirebase,getFirestore}) =>{\n        const firebase= getFirebase()\n        const firestore =getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{ \n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName:newUser.firstName,\n                lastName:newUser.lastName,\n                initials:newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type:'SIGNUP_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({type:'SIGNUP_ERROR',err })\n        })\n    }\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst SignedOutLinks =() =>{\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signUp'>Signup</NavLink></li>\n            <li><NavLink to='/signIn'>Log in</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\nconst Navbar =(props) =>{\n    const {auth,profile} =props\n    console.log(auth)\n    const links =auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to ='/' className=\"brand-logo\"> Project Management Tool</Link>\n                  { auth.isLoaded && links  }\n\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps=(state)=>{\n    console.log(state)\n    return{\n        auth:state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps) (Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications =(props) =>{\n    const {notifications} = props\n    return(\n        <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n          { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary =({project}) =>{\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{project.title}</span>\n                     <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n    <p className=\"grey-text\">{moment( project.createdAt.toDate() ).calendar()}</p>\n                </div>\n            </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectList =({projects}) =>{\n    return(\n        <div className=\"project-list section\">\n            {\n                projects && projects.map(project =>{\n                    return(\n                        <Link to ={'/project/' + project.id}>\n                            <ProjectSummary project ={project} key={project.id}/>\n                        </Link>\n                    )\n                })\n            }\n        </div>\n        \n    )\n}\n\nexport default ProjectList","import React,{Component} from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component{\n    render(){\n        //console.log(this.props)\n        const {projects,auth,notifications} =this.props\n\n        if(!auth.uid) return  <Redirect to ='/signIn'/>\n        \n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects ={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps =(state) =>{\n    console.log(state)\n    return{\n        projects:state.firestore.ordered.projects,\n        auth:state.firebase.auth,\n        notifications:state.firestore.ordered.notifications\n}\n\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'projects' ,orderBy :['createdAt','desc']},\n        {collection:'notifications', limit:3 , orderBy :['time','desc']}\n    ])\n) (Dashboard)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    //console.log(props)\n    const {project,auth} =props\n    if (!auth.uid) return  <Redirect to ='/signIn'/>\n\n\n    if (project){\n        return(\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                     <span className=\"card-title\">{project.title}</span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action gret lighten-4 grey-text\">\n                     <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                     <div>{moment( project.createdAt.toDate() ).calendar()}</div>\n                </div>\n            </div>\n            \n        </div>\n        ) \n    }\n    else{\n        return (\n                <div className=\"container center\">\n                    <p>Loading project...</p>\n                </div>\n            )\n    }\n    \n}\n\nconst mapStateToProps =(state,ownProps) =>{\n    console.log(state)\n   // console.log(ownProps)\n    const id =ownProps.match.params.id\n    const projects=state.firestore.data.projects\n    const project =projects? projects[id]:null\n    return{\n        project:project,\n        auth:state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'projects'}\n    ])\n\n) (ProjectDetails)\n\n","import React,{Component} from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\nclass SignIn extends Component {\n\n    state={\n        email:'',\n        password:''\n    }\n\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    handleSubmit =(e) =>{\n        e.preventDefault()\n        console.log(this.props)\n        this.props.signIn(this.state)\n    }\n    render(){\n        const {authError,auth} =this.props\n        if (auth.uid) return <Redirect to ='/'/>\n    return (\n        \n     <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n                  {authError? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n        \n    )\n}\n\n}\nconst mapStateToProps =(state) =>{\n    return{\n        authError:state.auth.authError,\n        auth:state.firebase.auth\n    }\n}\nconst mapDispatchToProps =(dispatch) =>{\n    return{\n        signIn:(creds) =>dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (SignIn)\n","import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signUp} from '../../store/actions/authActions'\n\n\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.signUp(this.state)\n}\n  render() {\n      const {auth,authError} =this.props\n      if (auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n                  {authError? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps =(state) =>{\n    return{\n       \n        auth:state.firebase.auth,\n        authError:state.auth.authError\n    }\n}\n\nconst mapDispatchToProps =(dispatch) =>{\n    return{\n        signUp:(newUser) =>dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (SignUp)","import React,{Component} from 'react'\nimport {createProject} from '../../store/actions/projectActions'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nclass CreateProject extends Component {\n\n    state={\n        title:'',\n        content:''\n    }\n\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n\n    handleSubmit =(e) =>{\n        e.preventDefault()\n       // console.log(this.state)\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n    render(){\n        const {auth} =this.props\n        if (!auth.uid) return  <Redirect to ='/signIn'/>\n    return (\n         \n\n     <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n          <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create </button>\n          </div>\n        </form>\n      </div>\n        \n    )\n}\n\n}\nconst mapStateToProps =(state) =>{\n    return{\n        auth:state.firebase.auth\n    }\n}\nconst mapDispatchToProps =(dispatch) =>{\n    return{\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (CreateProject)\n","export const createProject =(project) =>{\n    return( dispatch,getState,{getFirebase,getFirestore}) =>{\n        //make async call to database\n        const firestore =getFirestore()\n        const profile =getState().firebase.profile\n        const authorId =getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId:authorId,\n            createdAt:new Date()\n\n        }).then(()=>{\n            dispatch({\n                type:'CREATE_PROJECT',\n                project:project\n            })\n        }).catch((err)=>{\n            dispatch({\n                type:'CREATE_PROJECT_ERROR',\n                err\n            })\n        })\n        \n    }\n}","import React,{Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from \"./components/dashboard/Dashboard\"\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n \n\nclass App  extends Component {\n\n  render(){\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/project/:id' component={ProjectDetails}/>\n            <Route path='/signIn' component={SignIn}/>\n            <Route path='/signUp' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Switch } from \"react-router-dom\"\n\nconst initState ={\n    authError:null\n}\n\nconst authReducer =(state=initState,action) =>{\n\n    switch(action.type){\n        case 'LOGIN_SUCCESS':\n            console.log('Login success')\n            return{\n                ...state,\n                authError:null\n            }\n        case 'LOGIN_ERROR':\n            console.log('login failed')\n            return{\n                ...state,\n                authError:'Login failed'\n            }       \n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state    \n\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return{\n                ...state,\n                authError:null\n            }    \n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return{\n                ...state,\n                authError:action.err.message\n            }    \n        default:\n            return state    \n\n    }\n    \n}\n\nexport default authReducer","const initState ={\n    projects: [\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n      ]\n}\n\nconst projectReducer =(state=initState,action) =>{\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log(\"created project :\",action.project)\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log(\"create project error:\",action.err)\n            return state\n\n        default:\n            return state\n\n\n    }\n\n    \n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers } from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firestore:firestoreReducer,\n    firebase:firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\n// Your web app's Firebase configuration\n var firebaseConfig = {\n    apiKey: \"AIzaSyBSJALnT00ed-8RpAXIlQ4d5XIjMamB8-8\",\n    authDomain: \"projectplanning-5b18c.firebaseapp.com\",\n    databaseURL: \"https://projectplanning-5b18c.firebaseio.com\",\n    projectId: \"projectplanning-5b18c\",\n    storageBucket: \"projectplanning-5b18c.appspot.com\",\n    messagingSenderId: \"550119554895\",\n    appId: \"1:550119554895:web:6e1762d633fe7670348f3a\",\n    measurementId: \"G-B078FG48J0\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \n\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}><App /></Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n});"],"sourceRoot":""}