{"ast":null,"code":"var _jsxFileName = \"/home/abialihusain/Music/React/project-planning/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase, fbConfig)));\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n};\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  presence: 'presence',\n  sessions: 'sessions'\n};\n\nfunction AuthIsLoaded({\n  children\n}) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"Loading Screen...\");\n  return children;\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }\n})))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/abialihusain/Music/React/project-planning/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","useSelector","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","isLoaded","fbConfig","firebase","store","withExtraArgument","rrfConfig","userProfile","useFirestoreForProfile","rrfProps","config","dispatch","presence","sessions","AuthIsLoaded","children","auth","state","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,uBAAvC,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,WAArC,EAAkDC,QAAlD,QAAkE,sBAAlE;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AAGA,MAAMC,KAAK,GAAGf,WAAW,CACrBG,WADqB,EAErBD,OAAO,CACHD,eAAe,CAACK,KAAK,CAACU,iBAAN,CAAwB;AAAEL,EAAAA,WAAF;AAAeH,EAAAA;AAAf,CAAxB,CAAD,CADZ,EAEHD,cAAc,CAACO,QAAD,EAAWD,QAAX,CAFX,CAFc,CAAzB;AAQA,MAAMI,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE,OADC;AAEdC,EAAAA,sBAAsB,EAAE;AAFV,CAAlB;AAKA,MAAMC,QAAQ,GAAG;AACbN,EAAAA,QADa;AAEbO,EAAAA,MAAM,EAAEJ,SAFK;AAGbK,EAAAA,QAAQ,EAAEP,KAAK,CAACO,QAHH;AAIbb,EAAAA,uBAJa;AAKbc,EAAAA,QAAQ,EAAE,UALG;AAMbC,EAAAA,QAAQ,EAAE;AANG,CAAjB;;AASA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAChC,QAAMC,IAAI,GAAGtB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACd,QAAN,CAAea,IAAzB,CAAxB;AACA,MAAI,CAACf,QAAQ,CAACe,IAAD,CAAb,EAAqB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACrB,SAAOD,QAAP;AACH;;AAED7B,QAAQ,CAACgC,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEd,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,0BAAD,oBAAiCK,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,CADJ,EAQIU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARJ;AAWAhC,aAAa,CAACiC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\n\nconst store = createStore(\n    rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebase, fbConfig),\n    )\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n    presence: 'presence',\n    sessions: 'sessions'\n}\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n    return children\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider { ...rrfProps }>\n            <AuthIsLoaded>\n                <App />\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>, \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}